FROM registry.fedoraproject.org/fedora-minimal:39 as base

ARG USER=queil
ARG HOME=/home/$USER

# Software

RUN microdnf update -y && \
    microdnf install -y --nodocs --setopt install_weak_deps=0 \
    systemd tar unzip bash-completion git git-delta micro jq dnsutils \
    iproute htop which procps-ng openssh-server xpanes \
    podman podman-compose slirp4netns fuse-overlayfs --exclude container-selinux && \
    ln -s /usr/bin/python3 /usr/bin/python && \
    rpm --setcaps shadow-utils 2>/dev/null

RUN adduser $USER && chown $USER -R $HOME && \
    echo -e "$USER:1:999\n$USER:1001:64535" > /etc/subuid; \
    echo -e "$USER:1:999\n$USER:1001:64535" > /etc/subgid;

COPY images/containers.conf /etc/containers/containers.conf
COPY images/podman-containers.conf $HOME/.config/containers/containers.conf

RUN chmod 0755 /usr/bin/newuidmap && chmod 0755 /usr/bin/newgidmap

#Copy & modify the defaults to provide reference if runtime changes needed.
#Changes here are required for running with fuse-overlay storage inside container.
RUN sed -e 's|^#mount_program|mount_program|g' \
           -e '/additionalimage.*/a "/var/lib/shared",' \
           -e 's|^mountopt[[:space:]]*=.*$|mountopt = "nodev,fsync=0"|g' \
           /usr/share/containers/storage.conf \
           > /etc/containers/storage.conf

RUN mkdir -p /home/$USER/.local/share/containers && \
    chown $USER:$USER -R /home/$USER && \
    chmod 644 /etc/containers/containers.conf

# Note VOLUME options must always happen after the chown call above
# RUN commands can not modify existing volumes
VOLUME /var/lib/containers
VOLUME /home/$USER/.local/share/containers

RUN mkdir -p /var/lib/shared/overlay-images \
             /var/lib/shared/overlay-layers \
             /var/lib/shared/vfs-images \
             /var/lib/shared/vfs-layers && \
    touch /var/lib/shared/overlay-images/images.lock && \
    touch /var/lib/shared/overlay-layers/layers.lock && \
    touch /var/lib/shared/vfs-images/images.lock && \
    touch /var/lib/shared/vfs-layers/layers.lock

ENV _CONTAINERS_USERNS_CONFIGURED=""

RUN curl -sSL https://starship.rs/install.sh -o ./install.sh && \
    chmod +x ./install.sh && ./install.sh --yes && rm ./install.sh

# User setup

WORKDIR $HOME
USER $USER

RUN systemctl --user enable podman.socket

RUN mkdir -p $HOME/.local/bin

RUN curl -sSL https://update.code.visualstudio.com/latest/server-linux-x64/stable -o /tmp/vscode-server-linux-x64.tar.gz && \
    tar -zxvf /tmp/vscode-server-linux-x64.tar.gz -C /tmp && \
    export VSCODE_GIT_HASH=$(cat /tmp/vscode/product.json | jq -r .commit) && \
    mkdir -p $HOME/.vscode-server/bin/$VSCODE_GIT_HASH && \
    tar -zxvf /tmp/vscode-server-linux-x64.tar.gz -C $HOME/.vscode-server/bin/$VSCODE_GIT_HASH --strip 1 && \
    touch $HOME/.vscode-server/bin/$VSCODE_GIT_HASH/0 && \
    rm /tmp/vscode-server-linux-x64.tar.gz

USER root

RUN curl -sSL https://github.com/zellij-org/zellij/releases/latest/download/zellij-x86_64-unknown-linux-musl.tar.gz -o /tmp/zellij-x86_64-unknown-linux-musl.tar.gz && \
    tar -zxvf /tmp/zellij-x86_64-unknown-linux-musl.tar.gz -C /tmp && \
    mv /tmp/zellij /usr/bin && chmod +x /usr/bin/zellij && \
    rm /tmp/zellij-x86_64-unknown-linux-musl.tar.gz

RUN ln -s $HOME/.vscode-server/bin/$VSCODE_GIT_HASH/bin/code-server /usr/bin/code-server
USER $USER

# global vscode extensions

RUN code-server --install-extension streetsidesoftware.code-spell-checker && \
    code-server --install-extension luxcium.pop-n-lock-theme-vscode

ARG INIT_REPO=https://github.com/queil/image
ARG INIT_BRANCH=init-home-2
ARG INIT_DIR=/init

WORKDIR $INIT_DIR

RUN git clone --no-checkout $INIT_REPO . && \
    git sparse-checkout init --cone && \
    git sparse-checkout set ".$INIT_DIR" && \
    git checkout $INIT_BRANCH && \
    ".$INIT_DIR/update.sh"
